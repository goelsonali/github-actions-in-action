name: Cache Multi-Job Workflows
on:
  push:
  workflow_dispatch:
    inputs:
      cache-key:
        description: 'Cache key flag'
        type: boolean
        default: true
      node-version:
        description: 'Node.js version to use'
        type: choice
        options:
          - '20.x'
          - '22.x'
          - '24.x'
        default: '24.x'

jobs:
  install-deps:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: react-app
    outputs:
        deps-cache-key: ${{ steps.cache_key.outputs.CACHE_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ inputs.node-version }}
      - name: Calculate Cache Key
        id: cache_key
        run: |
          echo "CACHE_KEY=deps-node-modules-${{ hashFiles('react-app/package-lock.json') }}" >> $GITHUB_OUTPUT
      - name: Download cached dependencies
        uses: actions/cache@v3
        id: cache-deps
        if: ${{ steps.cache_key.outputs.CACHE_KEY }}
        with:
          path: react-app/node_modules
          key: deps-node-modules-${{ build.steps.cache_key.outputs.cache_key  }}
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download cached dependencies
        uses: actions/cache@v3
        id: cache-deps
        if: ${{ inputs.cache-key}}
        with:
          path: react-app/node_modules
          key: deps-node-modules-${{ build.steps.cache_key.outputs.cache_key  }}
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

  build:
    runs-on: ubuntu-latest
    needs: install-deps
    defaults:
      run:
        working-directory: react-app
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ inputs.node-version }}
      - name: Download cached dependencies
        uses: actions/cache@v3
        id: cache-deps
        if: ${{ inputs.cache-key}}
        with:
          path: react-app/node_modules
          key: ${{ needs.install-deps.outputs.deps-cache-key }}
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci
      - name: Testing
        run: npm run test
      - name: Building
        run: npm run build
      - name: Deploying To Non-Prod
        run: echo "Deploying to non-prod environment"